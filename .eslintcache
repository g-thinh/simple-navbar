[{"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\index.js":"1","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\views\\About.js":"2","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\App.js":"3","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\NavBar.js":"4","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\PageLayout.js":"5","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\redux\\uiReducers.js":"6","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\redux\\uiActions.js":"7","C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\SideBar.js":"8"},{"size":312,"mtime":1610310977112,"results":"9","hashOfConfig":"10"},{"size":163,"mtime":1610311384446,"results":"11","hashOfConfig":"10"},{"size":2960,"mtime":1610340389555,"results":"12","hashOfConfig":"10"},{"size":2948,"mtime":1610338817717,"results":"13","hashOfConfig":"10"},{"size":416,"mtime":1610329399156,"results":"14","hashOfConfig":"10"},{"size":692,"mtime":1610313709147,"results":"15","hashOfConfig":"10"},{"size":237,"mtime":1610313663626,"results":"16","hashOfConfig":"10"},{"size":1186,"mtime":1610338740058,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w1nx74",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\index.js",[],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\views\\About.js",["35"],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\App.js",["36","37","38"],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\NavBar.js",["39","40","41","42","43"],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\PageLayout.js",[],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\redux\\uiReducers.js",[],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\redux\\uiActions.js",[],"C:\\Users\\thinh\\Desktop\\#Projects\\simple-navbar\\src\\components\\SideBar.js",["44"],"import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideBar = () => {\r\n  const TOGGLE = useSelector((state) => state.toggleSidebar);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"Side bar is currently\", TOGGLE);\r\n  }, [TOGGLE]);\r\n\r\n  return (\r\n    <SidebarContainer className={TOGGLE ? \"show\" : \"hide\"}>\r\n      <MenuList>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </MenuList>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nconst SidebarContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 60%;\r\n  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14),\r\n    0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n  background: lightcyan;\r\n\r\n  @media (min-width: 600px) {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst MenuList = styled.ul`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  & li {\r\n    padding: 1rem;\r\n    font-size: 1rem;\r\n    text-decoration: none;\r\n    &:hover {\r\n      background: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SideBar;\r\n",{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":2,"column":17,"nodeType":"47","messageId":"48","endLine":2,"endColumn":21},{"ruleId":"45","severity":1,"message":"50","line":3,"column":29,"nodeType":"47","messageId":"48","endLine":3,"endColumn":32},{"ruleId":"45","severity":1,"message":"51","line":16,"column":9,"nodeType":"47","messageId":"48","endLine":16,"endColumn":15},{"ruleId":"45","severity":1,"message":"52","line":2,"column":18,"nodeType":"47","messageId":"48","endLine":2,"endColumn":27},{"ruleId":"45","severity":1,"message":"53","line":9,"column":10,"nodeType":"47","messageId":"48","endLine":9,"endColumn":19},{"ruleId":"45","severity":1,"message":"54","line":9,"column":21,"nodeType":"47","messageId":"48","endLine":9,"endColumn":31},{"ruleId":"45","severity":1,"message":"55","line":14,"column":9,"nodeType":"47","messageId":"48","endLine":14,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":47,"column":6,"nodeType":"58","endLine":47,"endColumn":31,"suggestions":"59"},{"ruleId":"45","severity":1,"message":"52","line":2,"column":18,"nodeType":"47","messageId":"48","endLine":2,"endColumn":27},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'css' is defined but never used.","'reduce' is assigned a value but never used.","'keyframes' is defined but never used.","'isToggled' is assigned a value but never used.","'setToggled' is assigned a value but never used.","'TOGGLE' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["60"],{"desc":"61","fix":"62"},"Update the dependencies array to be: [prevScrollPos, isTopPos, handleScroll]",{"range":"63","text":"64"},[1475,1500],"[prevScrollPos, isTopPos, handleScroll]"]